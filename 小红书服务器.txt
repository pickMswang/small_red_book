epoll+线程池
单I/O线程+多工作者线程的模型
这种架构主要是基于I/O多路复用的思想（主要是epoll，select/poll已过时），
通过单线程I/O多路复用，
可以达到高效并发，
同时避免了多线程I/O来回切换的各种开销，
思路清晰，
易于管理，
而基于线程池的多工作者线程，
又可以充分发挥和利用多线程的优势，
利用线程池
进一步提高资源复用性和避免产生过多线程。



单线程创建epoll并等待，
有I/O请求（socket）到达时，
将其加入epoll并从线程池中取一个空闲工作者线程，
将实际的任务交由工作者线程处理。

epoll 即使使用边缘触发 一个socket上的某个事件还是可能被触发多次，
采用线程池的方式来处理事件
可能一个socket同时被多个线程处理 
这样是一种浪费，应该让一个线程处理一个socket是合理的
epoll 采用边缘触发 并且 注册事件为EPOLLONESHOT ，
这样就 解决了问题


